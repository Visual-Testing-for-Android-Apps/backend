{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler\",\"filename\":\"/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.14": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler",
      "filename": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar storage = _multer[\"default\"].diskStorage({\n  destination: function destination(req, file, cb) {\n    cb(null, './uploads');\n  },\n  filename: function filename(req, file, cb) {\n    var uniquepreffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    cb(null, uniquepreffix + \"-\" + file.originalname);\n  }\n});\n\nfunction fileFilter(req, file, cb) {\n  // The function should call `cb` with a boolean\n  // to indicate if the file should be accepted\n  var acceptFileType = ['video/mp4', 'image/png', 'image/jpeg', 'image/gif'];\n\n  if (acceptFileType.includes(file.mimetype)) {\n    // To accept the file pass `true`, like so:\n    cb(null, true);\n  } else {\n    cb(new Error(\"invalid File type\\nonly accpet\" + acceptFileType));\n  } //cb(null, false)\n  // You can always pass an error if something goes wrong:\n  //cb(new Error('I don\\'t have a clue!'))\n\n}\n\nvar upload = (0, _multer[\"default\"])({\n  storage: storage,\n  limits: {\n    fileSize: 1024 * 1024 * 5 // 5MB\n\n  },\n  fileFilter: fileFilter\n});\napp.get(\"/test_get\", function (req, res) {\n  res.send(\"test_get\");\n});\napp.post(\"/fileReceiver\", upload.single('userFile'), function (req, res) {\n  console.log(req.file);\n  console.log(req.body);\n  res.send(req.file);\n});\napp.post('/multiFileReceiver', upload.array(\"userFile\", 10), function (req, res) {\n  res.send(\"Multiple File received\");\n  console.log(req);\n});\napp.listen(8000, function () {\n  console.log(\"listening on port 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzdG9yYWdlIiwibXVsdGVyIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYiIsImZpbGVuYW1lIiwidW5pcXVlcHJlZmZpeCIsIkRhdGUiLCJub3ciLCJNYXRoIiwicm91bmQiLCJyYW5kb20iLCJvcmlnaW5hbG5hbWUiLCJmaWxlRmlsdGVyIiwiYWNjZXB0RmlsZVR5cGUiLCJpbmNsdWRlcyIsIm1pbWV0eXBlIiwiRXJyb3IiLCJ1cGxvYWQiLCJsaW1pdHMiLCJmaWxlU2l6ZSIsImdldCIsInJlcyIsInNlbmQiLCJwb3N0Iiwic2luZ2xlIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJhcnJheSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRSwwQkFBWDs7QUFFQSxJQUFNQyxPQUFPLEdBQUdDLG1CQUFPQyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUUscUJBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQkMsRUFBckIsRUFBeUI7QUFDcENBLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sV0FBUCxDQUFGO0FBQ0QsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRSxrQkFBVUgsR0FBVixFQUFlQyxJQUFmLEVBQXFCQyxFQUFyQixFQUF5QjtBQUNqQyxRQUFNRSxhQUFhLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxLQUFhLEdBQWIsR0FBbUJDLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0IsR0FBM0IsQ0FBekM7QUFDQVAsSUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBTUUsYUFBYSxHQUFHLEdBQWhCLEdBQXFCSCxJQUFJLENBQUNTLFlBQWhDLENBQUY7QUFDRDtBQVA4QixDQUFuQixDQUFoQjs7QUFVRSxTQUFTQyxVQUFULENBQXFCWCxHQUFyQixFQUEwQkMsSUFBMUIsRUFBZ0NDLEVBQWhDLEVBQW9DO0FBRWxDO0FBQ0E7QUFDQSxNQUFNVSxjQUFjLEdBQUcsQ0FBQyxXQUFELEVBQWEsV0FBYixFQUF5QixZQUF6QixFQUF3QyxXQUF4QyxDQUF2Qjs7QUFDQSxNQUFJQSxjQUFjLENBQUNDLFFBQWYsQ0FBd0JaLElBQUksQ0FBQ2EsUUFBN0IsQ0FBSixFQUE0QztBQUN4QztBQUNBWixJQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBRjtBQUNILEdBSEQsTUFHSztBQUNEQSxJQUFBQSxFQUFFLENBQUMsSUFBSWEsS0FBSixDQUFVLG1DQUFtQ0gsY0FBN0MsQ0FBRCxDQUFGO0FBQ0gsR0FWaUMsQ0FZbEM7QUFJQTtBQUNBOztBQUVEOztBQUVELElBQUlJLE1BQU0sR0FBRyx3QkFBTztBQUFFcEIsRUFBQUEsT0FBTyxFQUFFQSxPQUFYO0FBQ2xCcUIsRUFBQUEsTUFBTSxFQUFDO0FBQ0xDLElBQUFBLFFBQVEsRUFBRyxPQUFPLElBQVAsR0FBYyxDQURwQixDQUN1Qjs7QUFEdkIsR0FEVztBQUlkUCxFQUFBQSxVQUFVLEVBQUdBO0FBSkMsQ0FBUCxDQUFiO0FBT0ZoQixHQUFHLENBQUN3QixHQUFKLENBQVEsV0FBUixFQUFxQixVQUFDbkIsR0FBRCxFQUFNb0IsR0FBTixFQUFZO0FBQzdCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxVQUFUO0FBQ0gsQ0FGRDtBQUlBMUIsR0FBRyxDQUFDMkIsSUFBSixDQUFTLGVBQVQsRUFBeUJOLE1BQU0sQ0FBQ08sTUFBUCxDQUFjLFVBQWQsQ0FBekIsRUFBb0QsVUFBQ3ZCLEdBQUQsRUFBTW9CLEdBQU4sRUFBWTtBQUc1REksRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVl6QixHQUFHLENBQUNDLElBQWhCO0FBQ0F1QixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWXpCLEdBQUcsQ0FBQzBCLElBQWhCO0FBQ0FOLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTckIsR0FBRyxDQUFDQyxJQUFiO0FBQ0gsQ0FORDtBQVFBTixHQUFHLENBQUMyQixJQUFKLENBQVMsb0JBQVQsRUFBK0JOLE1BQU0sQ0FBQ1csS0FBUCxDQUFhLFVBQWIsRUFBeUIsRUFBekIsQ0FBL0IsRUFBNkQsVUFBQzNCLEdBQUQsRUFBTW9CLEdBQU4sRUFBWTtBQUVyRUEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsd0JBQVQ7QUFDQUcsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVl6QixHQUFaO0FBR0gsQ0FORDtBQVNBTCxHQUFHLENBQUNpQyxNQUFKLENBQVcsSUFBWCxFQUFpQixZQUFJO0FBQ2pCSixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3QkFBWjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NoZW5iZWluaW5nL0Rvd25sb2Fkcy9HaXRIdWIvVmlzdWFsX3Rlc3RpbmdfYmFja2VuZC9maWxlX3VwbG9hZF9oYW5kbGVyL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IG11bHRlciBmcm9tICdtdWx0ZXInXG5cbmNvbnN0IGFwcCA9ZXhwcmVzcygpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbjogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcbiAgICAgIGNiKG51bGwsICcuL3VwbG9hZHMnKVxuICAgIH0sXG4gICAgZmlsZW5hbWU6IGZ1bmN0aW9uIChyZXEsIGZpbGUsIGNiKSB7XG4gICAgICBjb25zdCB1bmlxdWVwcmVmZml4ID0gRGF0ZS5ub3coKSArICctJyArIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDFFOSlcbiAgICAgIGNiKG51bGwsdW5pcXVlcHJlZmZpeCArIFwiLVwiKyBmaWxlLm9yaWdpbmFsbmFtZSApXG4gICAgfVxuICB9KVxuXG4gIGZ1bmN0aW9uIGZpbGVGaWx0ZXIgKHJlcSwgZmlsZSwgY2IpIHtcblxuICAgIC8vIFRoZSBmdW5jdGlvbiBzaG91bGQgY2FsbCBgY2JgIHdpdGggYSBib29sZWFuXG4gICAgLy8gdG8gaW5kaWNhdGUgaWYgdGhlIGZpbGUgc2hvdWxkIGJlIGFjY2VwdGVkXG4gICAgY29uc3QgYWNjZXB0RmlsZVR5cGUgPSBbJ3ZpZGVvL21wNCcsJ2ltYWdlL3BuZycsJ2ltYWdlL2pwZWcnICAsJ2ltYWdlL2dpZiddXG4gICAgaWYgKGFjY2VwdEZpbGVUeXBlLmluY2x1ZGVzKGZpbGUubWltZXR5cGUgKSl7XG4gICAgICAgIC8vIFRvIGFjY2VwdCB0aGUgZmlsZSBwYXNzIGB0cnVlYCwgbGlrZSBzbzpcbiAgICAgICAgY2IobnVsbCwgdHJ1ZSlcbiAgICB9ZWxzZXtcbiAgICAgICAgY2IobmV3IEVycm9yKFwiaW52YWxpZCBGaWxlIHR5cGVcXG5vbmx5IGFjY3BldFwiICsgYWNjZXB0RmlsZVR5cGUgKSlcbiAgICB9XG4gICAgXG4gICAgLy9jYihudWxsLCBmYWxzZSlcbiAgXG4gICAgXG4gIFxuICAgIC8vIFlvdSBjYW4gYWx3YXlzIHBhc3MgYW4gZXJyb3IgaWYgc29tZXRoaW5nIGdvZXMgd3Jvbmc6XG4gICAgLy9jYihuZXcgRXJyb3IoJ0kgZG9uXFwndCBoYXZlIGEgY2x1ZSEnKSlcbiAgXG4gIH1cbiAgXG4gIHZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlOiBzdG9yYWdlICwgXG4gICAgbGltaXRzOntcbiAgICAgIGZpbGVTaXplIDogMTAyNCAqIDEwMjQgKiA1LCAvLyA1TUJcbiAgICAgICAgfSxcbiAgICAgICAgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KVxuXG5cbmFwcC5nZXQoXCIvdGVzdF9nZXRcIiwgKHJlcSwgcmVzKT0+e1xuICAgIHJlcy5zZW5kKFwidGVzdF9nZXRcIik7XG59KVxuXG5hcHAucG9zdChcIi9maWxlUmVjZWl2ZXJcIix1cGxvYWQuc2luZ2xlKCd1c2VyRmlsZScpLCAocmVxLCByZXMpPT57XG4gICAgXG5cbiAgICBjb25zb2xlLmxvZyhyZXEuZmlsZSlcbiAgICBjb25zb2xlLmxvZyhyZXEuYm9keSlcbiAgICByZXMuc2VuZChyZXEuZmlsZSlcbn0pXG5cbmFwcC5wb3N0KCcvbXVsdGlGaWxlUmVjZWl2ZXInLCB1cGxvYWQuYXJyYXkoXCJ1c2VyRmlsZVwiLCAxMCksIChyZXEsIHJlcyk9PntcbiAgICBcbiAgICByZXMuc2VuZChcIk11bHRpcGxlIEZpbGUgcmVjZWl2ZWRcIik7XG4gICAgY29uc29sZS5sb2cocmVxKVxuXG4gICBcbn0pXG5cblxuYXBwLmxpc3Rlbig4MDAwLCAoKT0+e1xuICAgIGNvbnNvbGUubG9nKFwibGlzdGVuaW5nIG9uIHBvcnQgODAwMFwiKVxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "storage",
        "multer",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "filename",
        "uniquepreffix",
        "Date",
        "now",
        "Math",
        "round",
        "random",
        "originalname",
        "fileFilter",
        "acceptFileType",
        "includes",
        "mimetype",
        "Error",
        "upload",
        "limits",
        "fileSize",
        "get",
        "res",
        "send",
        "post",
        "single",
        "console",
        "log",
        "body",
        "array",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,GAAG,GAAE,0BAAX;;AAEA,IAAMC,OAAO,GAAGC,mBAAOC,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAE,qBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACpCA,IAAAA,EAAE,CAAC,IAAD,EAAO,WAAP,CAAF;AACD,GAH8B;AAI/BC,EAAAA,QAAQ,EAAE,kBAAUH,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACjC,QAAME,aAAa,GAAGC,IAAI,CAACC,GAAL,KAAa,GAAb,GAAmBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAzC;AACAP,IAAAA,EAAE,CAAC,IAAD,EAAME,aAAa,GAAG,GAAhB,GAAqBH,IAAI,CAACS,YAAhC,CAAF;AACD;AAP8B,CAAnB,CAAhB;;AAUE,SAASC,UAAT,CAAqBX,GAArB,EAA0BC,IAA1B,EAAgCC,EAAhC,EAAoC;AAElC;AACA;AACA,MAAMU,cAAc,GAAG,CAAC,WAAD,EAAa,WAAb,EAAyB,YAAzB,EAAwC,WAAxC,CAAvB;;AACA,MAAIA,cAAc,CAACC,QAAf,CAAwBZ,IAAI,CAACa,QAA7B,CAAJ,EAA4C;AACxC;AACAZ,IAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACH,GAHD,MAGK;AACDA,IAAAA,EAAE,CAAC,IAAIa,KAAJ,CAAU,mCAAmCH,cAA7C,CAAD,CAAF;AACH,GAViC,CAYlC;AAIA;AACA;;AAED;;AAED,IAAII,MAAM,GAAG,wBAAO;AAAEpB,EAAAA,OAAO,EAAEA,OAAX;AAClBqB,EAAAA,MAAM,EAAC;AACLC,IAAAA,QAAQ,EAAG,OAAO,IAAP,GAAc,CADpB,CACuB;;AADvB,GADW;AAIdP,EAAAA,UAAU,EAAGA;AAJC,CAAP,CAAb;AAOFhB,GAAG,CAACwB,GAAJ,CAAQ,WAAR,EAAqB,UAACnB,GAAD,EAAMoB,GAAN,EAAY;AAC7BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,UAAT;AACH,CAFD;AAIA1B,GAAG,CAAC2B,IAAJ,CAAS,eAAT,EAAyBN,MAAM,CAACO,MAAP,CAAc,UAAd,CAAzB,EAAoD,UAACvB,GAAD,EAAMoB,GAAN,EAAY;AAG5DI,EAAAA,OAAO,CAACC,GAAR,CAAYzB,GAAG,CAACC,IAAhB;AACAuB,EAAAA,OAAO,CAACC,GAAR,CAAYzB,GAAG,CAAC0B,IAAhB;AACAN,EAAAA,GAAG,CAACC,IAAJ,CAASrB,GAAG,CAACC,IAAb;AACH,CAND;AAQAN,GAAG,CAAC2B,IAAJ,CAAS,oBAAT,EAA+BN,MAAM,CAACW,KAAP,CAAa,UAAb,EAAyB,EAAzB,CAA/B,EAA6D,UAAC3B,GAAD,EAAMoB,GAAN,EAAY;AAErEA,EAAAA,GAAG,CAACC,IAAJ,CAAS,wBAAT;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYzB,GAAZ;AAGH,CAND;AASAL,GAAG,CAACiC,MAAJ,CAAW,IAAX,EAAiB,YAAI;AACjBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,CAFD",
      "sourceRoot": "/Users/chenbeining/Downloads/GitHub/Visual_testing_backend/file_upload_handler/src/",
      "sourcesContent": [
        "import express from 'express'\nimport multer from 'multer'\n\nconst app =express();\n\nconst storage = multer.diskStorage({\n    destination: function (req, file, cb) {\n      cb(null, './uploads')\n    },\n    filename: function (req, file, cb) {\n      const uniquepreffix = Date.now() + '-' + Math.round(Math.random() * 1E9)\n      cb(null,uniquepreffix + \"-\"+ file.originalname )\n    }\n  })\n\n  function fileFilter (req, file, cb) {\n\n    // The function should call `cb` with a boolean\n    // to indicate if the file should be accepted\n    const acceptFileType = ['video/mp4','image/png','image/jpeg'  ,'image/gif']\n    if (acceptFileType.includes(file.mimetype )){\n        // To accept the file pass `true`, like so:\n        cb(null, true)\n    }else{\n        cb(new Error(\"invalid File type\\nonly accpet\" + acceptFileType ))\n    }\n    \n    //cb(null, false)\n  \n    \n  \n    // You can always pass an error if something goes wrong:\n    //cb(new Error('I don\\'t have a clue!'))\n  \n  }\n  \n  var upload = multer({ storage: storage , \n    limits:{\n      fileSize : 1024 * 1024 * 5, // 5MB\n        },\n        fileFilter : fileFilter})\n\n\napp.get(\"/test_get\", (req, res)=>{\n    res.send(\"test_get\");\n})\n\napp.post(\"/fileReceiver\",upload.single('userFile'), (req, res)=>{\n    \n\n    console.log(req.file)\n    console.log(req.body)\n    res.send(req.file)\n})\n\napp.post('/multiFileReceiver', upload.array(\"userFile\", 10), (req, res)=>{\n    \n    res.send(\"Multiple File received\");\n    console.log(req)\n\n   \n})\n\n\napp.listen(8000, ()=>{\n    console.log(\"listening on port 8000\")\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1617778476764
  }
}